-----------------------------------
--- Simple Notification Service ---
-----------------------------------
- What is SNS?
- Amazon Simple Notification Service, or SNS, is a web service, which makes it easy to set up, operate and send notifications from the cloud, and messages sent from an application can be immediately delivered to subscribers or other applications.
- So it's basically a notification service and you can use it to create push notifications, for example, to mobile devices, like a smartphone or tablet, and they support Apple, Google, Fire OS, Windows, and Android devices.
- And when I think of push notifications,
- I think of those messages that you sometimes see on your iPhone telling you that there's a new software update available, or you might receive a notification from UPS, for example, telling you that your delivery is coming today.
- You can also use SNS to send SMS text messages, and emails, and you can even send these messages to Amazon SQS or
any HTTP endpoint. So it's a really, really flexible service.
- And finally, you can even use SNS to trigger a Lambda function.
- So you can trigger a Lambda function to process the information in the message, publish to another SNS topic, or send the message to another AWS service.
- So Lambda can process the payload of the message, and then publish the results to another SNS topic, or send the message on somewhere else.


--- How does it work? ---
- Well, SNS uses what is known as a pub-sub model, which is a publish and subscribe model, but what does that actually mean?
- Well, with SNS, applications can publish or push messages to what's known as a topic and subscribers can subscribe to receive messages from the topic, but the best way to really understand it is with an example.

--- Example ---
- So here is my example application, and this is an online banking app.
- So it's dealing with online mortgage applications, credit card payments and savings accounts. So you might want to send out notifications, for example, when a loan is approved or when a new credit card statement is ready, or if a payment has been missed. 
- So these notifications get sent to an SNS queue and within SNS, you can set up different topics where the messages will be grouped together, and then the subscribers subscribe to the relevant topic to receive the notifications, rather like subscribing to an email list.
- So in this example, we've got subscribers like Lambda and SQS, as well as email subscribers and mobile devices. So these are all of our subscribers.
- So then if there's a notification about a missed payment, for example, that could be sent into Lambda and SQS to trigger an appropriate workflow.
- And if we want to send a notification to our users about a new credit card deal or a change in mortgage or savings interest rates, then we can use SNS to send an email or a notification that our customers can receive on their mobile device.
- And notifications are delivered using a push mechanism. So that eliminates the need for periodically checking or pulling for new information and updates.


--- So what do we mean when we talk about an SNS topic? ---
- It's really like an access point and it allows recipients to subscribe to a relevant topic, to receive identical copies of the same notification and SNS delivers appropriately formatted copies of the message to each subscriber, whether they're using an iOS or Android device, or whether they're using SMS or email, etc.
- So they format the message so that it appears correctly on all these different devices, and operating systems, and protocols.
- Now, as SNS is a managed service by default, it includes a lot of enterprise features that you would expect from AWS, including durable storage.
- So they've designed the storage on the backend to prevent messages from being lost, if something goes wrong.
- So all messages published to Amazon SNS get stored redundantly across multiple availability zones. Therefore, if a failure occurs in one availability zone, then your messages will not be lost and the SNS service will not be interrupted.

-- Benefits of Using SNS ---
- So let's take a look at some of the benefits of using SNS. Firstly, the messages are pretty much instantaneous.
- So it uses a push-based delivery, and as soon as a message is received by SNS, it is pushed out to subscribers.
- It's very simple to set up and use, with simple APIs and easy to integrate with other AWS services and applications.
- With SNS, you get flexible message delivery over multiple transport protocols.
- It's inexpensive with a pay as you go pricing model and no upfront costs.
- Easy to configure using the AWS management console, with the simplicity of a point-and-click interface.
- And as an AWS managed service, you get all the high availability and durability features that you need and would expect in a production environment.

--- Exam Scenarios ---
- Now you might see questions in the exam where they're asking you to select a solution for a particular scenario, and you need to decide between SNS and SQS, and you really only need to know it at a very high level.
- And it's more about being able to select the right solution than knowing all the ins and outs of how to configure and troubleshoot these services.
- So let's review the main differences between SNS and SQS.
- So SNS is a messaging service. It is push-based so it's pushing the messages out to subscribers. And when I think of SNS, I always try to remember push notifications. So those notifications that appear on your phone, telling you that your delivery is coming today or telling you that there is a software update available.
- Now SQS on the other hand is also a messaging service, but the messages are held in a queue instead of being delivered. SQS is pull-based. So any application which needs to consume or read the messages in the queue, will need to actively pull the queue to access the messages. So think about an application periodically pulling or checking the queue for messages.


--- Exam Tips ---
- With SNS, the clue is in the name. So it's all about notifications.
- So SNS is a scalable and highly available notification service, which allows us to send push notifications from the cloud.
- It supports a variety of different message formats, including SMS, text messages, and emails.
- And it can also send messages into Amazon SQS queues or any HTTP endpoint.
- And finally it uses a pub-sub or publish and subscribe model where users or applications can subscribe to the topics relevant to them, and it uses a push mechanism rather than a pull or a pull mechanism.
- And if you see anything in the exam and they're asking you about a push mechanism for sending messages to subscribers, then they are talking about SNS.
- And if they're talking about a pull mechanism and pulling messages or pulling messages from a queue, then they are talking about SQS.
